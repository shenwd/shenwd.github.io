<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hexo 搭建个人博客的基本步骤]]></title>
    <url>%2F2019%2F02%2F20%2FHexo%20%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%AD%A5%E9%AA%A4%2F</url>
    <content type="text"><![CDATA[为了所谓的自由 选择Hexo 方便的将md文档生成静态网页 易于部署到Github Page和码云上 可选各种主题；第三方功能齐全（搜索SEO、访问量统计、评论系统等） 主机环境 安装步骤 环境： Node.js 安装 Node.js 的最佳方式是使用 nvm。（两步） wget -qO- https://raw.github.com/creationix/nvm/v0.33.11/install.sh | sh nvm install stable git (自带，自行配置) 安装Hexo npm install -g hexo-cli 初始化指定文件夹初始化 123$ hexo init &lt;folder&gt;$ cd &lt;folder&gt;$ npm install 完成后，文件夹内目录如下： 1234567├── _config.yml （网站的 配置 信息，您可以在此配置大部分的参数。）├── package.json （应用程序的信息）├── scaffolds （模版 文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。）├── source （资源文件夹是存放用户资源的地方）| ├── _drafts| └── _posts （md文档存放地）└── themes （主题 文件夹。Hexo 会根据主题来生成静态页面） 基本配置网站配置 参数 描述 title 网站标题 subtitle 网站副标题 description 网站描述 author 您的名字 language 网站使用的语言 timezone 网站时区。Hexo 默认使用您电脑的时区。时区列表。比如说：America/New_York, Japan, 和 UTC 。 网址配置 参数 描述 默认值 url 网址 root 网站根目录 permalink 文章的 永久链接 格式 :year/:month/:day/:title/ permalink_defaults 永久链接中各部分的默认值 分类 &amp; 标签 参数 描述 默认值 default_category 默认分类 uncategorized category_map 分类别名 tag_map 标签别名 日期 / 时间格式 参数 描述 默认值 date_format 日期格式 YYYY-MM-DD time_format 时间格式 H:mm:ss 分页 参数 描述 默认值 per_page 每页显示的文章量 (0 = 关闭分页功能) 10 pagination_dir 分页目录 page 扩展 参数 描述 theme 当前主题名称。值为false时禁用主题 deploy 部署部分的设置 用到的命令操作 hexo new [layout] &lt;title&gt; //新建一遍文章 如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。 hexo g //生成静态文件 hexo s // 启动本地服务器 访问网址为： http://localhost:4000/ hexo d // 部署网站到远程服务器 hexo clean //清除缓存文件 使用NexT主题​ 官网步骤简单明了 本地md文档写作注意开头格式即可（例如本篇文章开头格式）: 以上几个属性暂时够用 写作完成将文件移到 source/_post/ 文件夹下 执行命令： 12hexo g （ 将md文档生成静态网页）hexo s （部署本地服务，检查是否成功） 部署到github page 上Github创建新仓库​ 新建一个名为你的用户名.github.io的仓库，比如说，如果你的github用户名是test，那么你就新建test.github.io的仓库（必须是你的用户名，其它名称无效），将来你的网站访问地址就是 http://test.github.io 了 ​ 创建成功后，默认会在你这个仓库里生成一些示例页面，以后你的网站所有代码都是放在这个仓库里啦。 配置github信息到配置文件_config 配置文件的最下边 1234deploy: type: git repo: https://github.com/shenwd/shenwd.github.io branch: master 配置github的ssh 查看是否已经有了ssh密钥：cd ~/.ssh\ 如果没有密钥则不会有此文件夹，有则备份删除 生存密钥：12$ ssh-keygen -t rsa -C &quot;name@gmail.com&quot;按3个回车，密码为空这里一般不使用密钥。 ​ 最后得到了两个文件：id_rsa和id_rsa.pub 添加 私密钥 到ssh：ssh-add id_rsa 需要之前输入密码（如果有）。 在github上添加ssh密钥，这要添加的是“id_rsa.pub”里面的公钥。 注意在这里由于直接复制粘帖公钥，可能会导致增加一些字符或者减少些字符，最好用系统工具xclip来做这些事情。 xclip -selection c id_rsa.pub 测试： ssh git@github.com 部署到github上使用命令： 1hexo d 稍等片刻，检查github page是否部署成功]]></content>
      <categories>
        <category>流程记录</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>个人博客</tag>
        <tag>github page</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[macOS下使用Hexo 搭建博客]]></title>
    <url>%2F2019%2F02%2F20%2FmacOS%E4%B8%8B%E4%BD%BF%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[环境配置git]]></content>
      <categories>
        <category>流程记录</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>个人博客</tag>
        <tag>github page</tag>
      </tags>
  </entry>
</search>
